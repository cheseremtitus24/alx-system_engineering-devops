## Binary Operators ##
# Hints:
Decimal to Binary Conversion

DECIMAL=9
BASE=2
dc -e "$DECIMAL $BASE op"

OR 

D2B=({0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1})
echo ${D2B[$DECIMAL]}

Binary to Decimal Conversion
BINARY=00000101
echo "$((2#$BINARY))"

#5   0 0 0 0 0 1 0 1
#9   0 0 0 0 1 0 0 1
--------------------
&    0 0 0 0 0 0 0 1  -- similar to multiplication e.g. (1x1=1, 1x0=0,0x0=0) - AND

#5   0 0 0 0 0 1 0 1
#9   0 0 0 0 1 0 0 1
--------------------
|    0 0 0 0 1 1 0 1  -- similar to summation e.g. (1+1=1, 1+0=1,0+0=0) - OR

#5   0 0 0 0 0 1 0 1
--------------------
<<   0 0 0 0 1 0 1 0  -- similar to multiplying by the power of 2. # Add a zero to the right end and delete the far left digit regardeless of whether (0 or 1)
# results to 5x2=10

#5   0 0 0 0 0 1 0 1
--------------------
>>   0 0 0 0 0 0 1 0  -- similar to dividing by 2. # Add a zero to the left end and delete the far right digit regardeless of whether (0 or 1)
#results to 5/2=2

### Affectations usage
*filename = hello.c*
...
        int sum=0;
        int value = 5;
         sum = value<<1;

        printf("The result is %d\n",sum); // 10
        sum = value>>1;
        printf("The result is %d\n",sum); // 2
        

        

